#ifndef Y_CONNECTION
#define Y_CONNECTION

#include "../../YNetwork/YNetwork.h"

namespace YLR
{
	/*!
	 * \brief
	 * 网络连接处理类，用来处理连接状态和数据传输。
	 * 数据传输过程中数据包格式为：
	 * 数据包字段说明:     |状态字|数据包总个数|当前数据包序号|数据包中数据长度|数据|结束|
	 * 各个字段长度(字节): | 1    |   4       |     4       |     4         | x  | 1 |
	 * 
	 * 详细说明：
	 * 状态字：标识该数据包的类型，状态字类型为StatusWord中的。
	 * 数据包总个数：本次发送的数据被分成的数据包总数，无符号整形。
	 * 当前数据包序号：本次发送的数据包在总个数中的序号，无符号整形。
	 * 数据包中数据长度：本数据包中的数据长度，无符号整形。
	 * 数据：数据包中的数据，长度为数据包中数据长度约定的长度。
	 * 结束：使用空字符（'\0'）做为结束标识。
	 *
	 * 作者：董帅 创建时间：2013-2-17 14:43:41
	 */
	class YNETWORK_API YConnection
	{
	public:
		enum StatusWord
		{
			Yes = 0x01,            /*!< 请求成功。 */
			No = 0x02,             /*!< 请求失败。 */
			Go = 0x03,             /*!< 继续。 */
			End = 0x04,            /*!< 结束。 */

			Connect = 0x11,        /*!< 请求连接。 */
			Disconnect = 0x12,     /*!< 请求断开连接。 */

			SendData = 0x21,       /*!< 请求发送数据。 */

			DataPackage = 0xFF     /*!< 数据包，不含有状态。 */
		};

		/*!
		 * \brief
		 * 默认构造函数。
		 * 作者：董帅 创建时间：2013-2-17 14:45:27
		 */
		YConnection();
	};
}

#endif